/*
 * Copyright (c) 2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { DOCUMENT } from "@angular/common";
import { Directive, ElementRef, HostListener, Injector } from "@angular/core";
import { FocusTrapTracker } from "./focus-trap-tracker.service";
var FocusTrapDirective = (function () {
    function FocusTrapDirective(elementRef, injector, focusTrapsTracker) {
        this.elementRef = elementRef;
        this.focusTrapsTracker = focusTrapsTracker;
        this.document = injector.get(DOCUMENT);
        this.focusTrapsTracker.current = this;
    }
    FocusTrapDirective.prototype.onFocusIn = function (event) {
        var nativeElement = this.elementRef.nativeElement;
        if (this.focusTrapsTracker.current === this && !nativeElement.contains(event.target)) {
            nativeElement.focus();
        }
    };
    FocusTrapDirective.prototype.ngAfterViewInit = function () {
        this._previousActiveElement = document.activeElement;
        var nativeElement = this.elementRef.nativeElement;
        nativeElement.setAttribute("tabindex", "0");
    };
    FocusTrapDirective.prototype.setPreviousFocus = function () {
        this._previousActiveElement.focus();
    };
    FocusTrapDirective.prototype.ngOnDestroy = function () {
        this.setPreviousFocus();
        this.focusTrapsTracker.activatePreviousTrapper();
    };
    return FocusTrapDirective;
}());
export { FocusTrapDirective };
FocusTrapDirective.decorators = [
    { type: Directive, args: [{ selector: "[clrFocusTrap]" },] },
];
/** @nocollapse */
FocusTrapDirective.ctorParameters = function () { return [
    { type: ElementRef, },
    { type: Injector, },
    { type: FocusTrapTracker, },
]; };
FocusTrapDirective.propDecorators = {
    'onFocusIn': [{ type: HostListener, args: ["document:focusin", ["$event"],] },],
};
//# sourceMappingURL=focus-trap.directive.js.map